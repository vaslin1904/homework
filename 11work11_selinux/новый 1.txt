Запустить nginx на нестандартном порту 3-мя разными способами:
переключатели setsebool;
добавление нестандартного порта в имеющийся тип;
формирование и установка модуля SELinux.
1.проверим, что в ОС отключен файервол
systemctl status firewalld
2. проверим, что конфигурация nginx настроена без ошибок
nginx -t
3. проверим режим работы SELinux
getenforce
Данный режим означает, что SELinux будет блокировать запрещенную активность
1 способ
4.Разрешим в SELinux работу nginx на порту TCP 4881 c помощью переключателей setsebool
4.1 Находим в логах (/var/log/audit/audit.log) информацию о блокировании порта
- установка утилиты audit2why 
yum install policycoreutils-python

-с помощью утилиты audit2why смотрим информацию о блокировании порта
grep nginx /var/log/audit/audit.log | audit2why
-Утилита audit2why покажет почему трафик блокируется. Исходя из вывода утилиты, мы видим, что нам нужно поменять параметр nis_enabled. 
Включим параметр nis_enabled и перезапустим nginx
setsebool -P nis_enabled on
systemctl restart nginx
systemctl status nginx
image 6
-Проверить статус параметра можно с помощью команды
getsebool -a | grep nis_enabled
- вернем параметр nis_enabled в статус off
setsebool -P nis_enabled off
2 Способ
разрешим в SELinux работу nginx на порту TCP 4881 c помощью добавления нестандартного порта в имеющийся тип:
- Поиск имеющегося типа, для http трафика:
semanage port -l | grep http
**8**
-Добавим порт в тип http_port_t 4881
emanage port -a -t http_port_t -p tcp 4881
**9**
-перезапустим службу nginx и проверим её работу

systemctl restart nginx && systemctl status nginx
**10**
-Удалить нестандартный порт из имеющегося типа
semanage port -d -t http_port_t -p tcp 4881
3 способ
Разрешим в SELinux работу nginx на порту TCP 4881 c помощью формирования и установки модуля SELinux:
-Посмотрим логи SELinux, которые относятся к nginx:
grep nginx /var/log/audit/audit.log
**11**
-Воспользуемся утилитой audit2allow для того, чтобы на основе логов SELinux сделать модуль, разрешающий работу nginx на нестандартном порту: 
grep nginx /var/log/audit/audit.log | audit2allow -M nginx
-Audit2allow сформировал модуль, и сообщил нам команду, с помощью которой можно применить данный модуль:
 semodule -i nginx.pp
 **12**
 - Запускаем и проверяем  nginx
 systemctl start nginx && systemctl status nginx
 **13**
 -После добавления модуля nginx запустился без ошибок. При использовании модуля изменения сохранятся после перезагрузки. 
 Просмотр всех установленных модулей: 
 semodule -l
 Для удаления модуля воспользуемся командой:
 semodule -r nginx
 
___________________________________

Обеспечение работоспособности приложения при включенном SELinux
1. Две машины
- Подключимся к клиенту

-Попробуем внести изменения в зону: nsupdate -k /etc/named.zonetransfer.key
nsupdate -k /etc/named.zonetransfer.key
-посмотрим логи SELinux, чтобы понять в чём может быть проблема
cat /var/log/audit/audit.log | audit2why
лог пустой
-Не закрывая сессию на клиенте, подключимся к серверу ns01 и проверим логи SELinux:
vagrant ssh ns01
-Проверим лог
cat /var/log/audit/audit.log | audit2why
**2**
-В логах мы видим, что ошибка в контексте безопасности. Вместо типа named_t используется тип etc_t.
Проверим данную проблему в каталоге /etc/named:
ls -laZ /etc/named
**3**
-Тут мы также видим, что контекст безопасности неправильный. Проблема заключается в том, что конфигурационные файлы лежат в другом каталоге. Посмотреть в каком каталоги должны лежать, 
файлы, чтобы на них распространялись правильные политики SELinux можно с помощью команды:

sudo semanage fcontext -l | grep named
**4**
-Изменим тип контекста безопасности для каталога /etc/named:
sudo chcon -R -t named_zone_t /etc/named
**5**
-Попробуем снова внести изменения с клиента:
nsupdate -k /etc/named.zonetransfer.key
> server 192.168.50.10
> zone ddns.lab
> update add www.ddns.lab. 60 A 192.168.50.15
> send
> quit
-dig www.ddns.lab
**6**
-Видим, что изменения применились. Попробуем перезагрузить хосты и ещё раз сделать запрос с помощью dig:
Всё правильно. После перезагрузки настройки сохранились.
**7**
-Для того, чтобы вернуть правила обратно, можно ввести команду:
restorecon -v -R /etc/named
**8**


Результатом выполнения данного задания будет:
README с анализом причины неработоспособности, возможными способами решения и обоснованием выбора одного из них;
