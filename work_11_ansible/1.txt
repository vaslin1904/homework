1.Длā подклĀчениā к хосту nginx нам необходимо будет передатþ множество
параметров - ÿто особенностþ Vagrant. Узнатþ ÿти параметрý можно с
помощþĀ командý vagrant ssh-config. Вот основнýе необходимýе нам:
[root@nginx ~#] vagrant ssh-config
2.Установка python3:
sudo yum install python3
python -V
3.Подключение репозитория и скачивание модуля pip для версии 3.6
sudo curl -LO https://bootstrap.pypa.io/pip/3.6/get-pip.py
4 Установка pip
sudo python3 get-pip.py --user
5. Установка ansible
python3 -m pip install --user ansible
5 В каталоге ansible создаем инвентори файл hosts
6 Проверим что Ansible может управлāтþ нашим хостом.
ansible nginx -i staging/hosts -m ping
7 Создаем rsa ключи
ssh-keygen -t rsa
8 На удалённом сервере (localhost) — включаем авторизацию по ключам.
 В файле /etc/ssh/sshd_config убираем комментарии перед строками
 RSAAuthentication yes, PubkeyAuthentication yes и AuthorizedKeysFile .ssh/authorized_keys. 
9 Перезапускаем SSH-сервер^
sudo service sshd restart
10. Проверяем доступ к серверу nginx
ansible nginx -i hosts -m ping
11 Создаем файл настроек ansible.cfg и правим файл hosts, удаляя инфопмацию о пользователе.
12 Проверяем достуаность nginx без явного указания инвентори файла
ansible nginx -m ping
13. Посмотрим какое āдро установлено на хосте:
ansible nginx -m command -a "uname -r"
14 Проверим статус сервиса firewalld
ansible nginx -m systemd -a name=firewalld
15 Установим пакет epel-release на наш хост
ansible nginx -m yum -a "name=epel-release state=present" -b
16 Создадим playbook epel.yml для установки пакета и запустим его
 ansible-playbook epel.yml
17 Запустим снова playbook epel.yml со статусом установки пакета absent
ansible nginx -m yum -a "name=epel-release state=absent" -b
Пакет был удален
-------------------
18Переименуем playbook epel.yml в nginx.yml
Добавим таск установки пакета nginx. (nginx.yml)
19 Вýведем в консолþ все теги:
ansible-playbook nginx.yml --list-tags
20 Запускаем только установку nginx 
ansible-playbook nginx.yml -t nginx-p
21 Вносим изменения в playbook:
- добавляем переменную в модуле vars
- добавляем копирование щаблона на удаленной машине templates/nginx.conf.j2
- создадим handler и добавим notify к копированию шаблона. Теперþ
каждýй раз когда конфиг будет изменāтþсā - сервис перезагрузитþсā.